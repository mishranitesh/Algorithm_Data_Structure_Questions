Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.
Input: 121
Output: true
Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Input: 0
Output: true

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    bool isPalindrome(int x) {
        if (x < 0 || (x != 0 && x % 10 == 0)) {
            return false;
        }
        std::vector<int> digits;
        while (x) {
            digits.push_back(x % 10);
            x /= 10;
        }
        
        while (!digits.empty()) {
            int begin_index = 0;
            int end_index = digits.size() - 1;
            
            if (digits.size() == 1) {
                break;
            } else if (digits.size() == 2) {
                return (digits[begin_index] == digits[end_index]);
            } else {
                if (digits[begin_index] == digits[end_index]) {
                    digits.erase(digits.begin());
                    digits.erase(digits.end() - 1);
                } else {
                    return false;
                }
            }
        }
        return true;
    }
};

-------------------------------------------------------------------------------------------------------------